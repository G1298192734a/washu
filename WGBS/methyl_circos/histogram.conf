<plot>
# The type sets the format of the track.
    file = /work/frasergen/backup/3d/project/research/wgbs/new/circos/G1-A-CK-3.CG_methyl.txt

# The track is confined within r0/r1 radius limits. When using the
# relative "r" suffix, the values are relative to the position of the
# ideogram.
    <<include r0r1.conf>>
# Histograms can have both a fill and outline. The default outline is 1px thick black. 

    fill_color = cg

# To turn off default outline, set the outline thickness to zero. If
# you want to permanently disable this default, edit
# etc/tracks/histogram.conf in the Circos distribution.
#   thickness = 0p
#<<include axes.conf>>
</plot>

# Methylation level CHG
<plot>
    file = /work/frasergen/backup/3d/project/research/wgbs/new/circos/G1-A-CK-3.CHG_methyl.txt
    <<include r0r1.conf>>

# The fill_color for a stacked histogram is expected to be a list of
# colors, each corresponding to a given value. For example, for the data line
#
# hs3 198000000 199999999 21.0000,6.0000,18.0000,12.0000
#
# the colors for the bins will be hs1 (21.0000), hs2 (6.0000), hs3 (18.0000), hs4 (12.0000).
    fill_color  = chg
#    orientation = in
#<<include axes.conf>>
</plot>

# Methylation level CG
<plot>
    file = /work/frasergen/backup/3d/project/research/wgbs/new/circos/G1-A-CK-3.CHH_methyl.txt
    <<include r0r1.conf>>
    fill_color  = chh
#<<include background.conf>>
</plot>


# applies to every data point - always true
# 1
#
# # check whether a data point is on a chromosome
# var(chr) eq "hs1"
# on(hs1) # shortcut
#
# # check whether a data point is not on a chromosome
# var(chr) ne "hs1"
# !on(hs1)
#
# # combine tests with or (||)
# on(hs1) || on(hs2)
# var(chr) =~ /hs(1|22)$/;
#
# # check position
# var(start) > 10Mb
#
# # use the value
# var(value) < 0.05
#
# # use any parameter
# var(color) eq "red"
# var(stroke_color) eq "vdred"

# in data file
# hs3 196000000 197999999 71.0000 id=abc,mult=5
# and then use them in a rule
#
# <rule>
# condition  = var(id) eq "abc"
# fill_color = blue
# value      = eval(var(value)*var(mult))
# </rule>






